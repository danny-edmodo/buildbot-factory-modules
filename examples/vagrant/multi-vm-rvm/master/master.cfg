# -*- python -*-
# ex: set syntax=python:

from vagrant import *
from rvm import *

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory.

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

####### BUILDSLAVES

# The 'slaves' list defines the set of recognized buildslaves. Each element is
# a BuildSlave object, specifying a unique slave name and password.  The same
# slave name and password must be configured on the slave.
from buildbot.buildslave import BuildSlave
c['slaves'] = [BuildSlave("example-slave", "pass")]

# 'slavePortnum' defines the TCP port to listen on for connections from slaves.
# This must match the value configured into the buildslaves (with their
# --master option)
c['slavePortnum'] = 9995

####### CHANGESOURCES

# the 'change_source' setting tells the buildmaster how it should find out
# about source code changes.  Here we point to the buildbot clone of pyflakes.

####### SCHEDULERS

# Configure the Schedulers, which decide how to react to incoming changes.  In this
# case, just kick off a 'runtests' build
from buildbot.changes.filter import ChangeFilter
user_git     = ChangeFilter(
    repository = 'git://github.com/sathlan/sathlan-buildbot.git')



from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.changes import filter
c['schedulers'] = []
#c['schedulers'].append(SingleBranchScheduler(
#        name="all",
#        treeStableTimer=None,
#        change_filter=user_git,
#        builderNames=["runtests"]))

####### BUILDERS

# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which slaves can execute them.  Note that any particular build will
# only take place on one slave.
c['builders'] = []

deb = Vagrant(basedir        = '/tmp/test-multivm-rvm',
              machine        = 'debian_amd64_604',
              vagrant_src    = 'git://github.com/sathlan/vms-for-acceptance.git')

fre = Vagrant(basedir        = '/tmp/test-multivm-rvm',
              machine        = 'freebsd_amd64_90',
              vagrant_src    = 'git://github.com/sathlan/vms-for-acceptance.git')

rvm = Rvm(
    ruby_version = '1.8.7-p302',
    gemset  = 'puppet276',
    modules = [{ 'rspec'    : ' = 2.7.0',    },
               # do not want rspec 2.9.0 (breaks aruba) and 2.8.0 seems broken:
                   # https://github.com/rspec/rspec-expectations/issues/112
               { 'gherkin'  : ' = 2.9.1',    },
               { 'puppet'   : ' = 2.7.6',    },
               { 'cucumber' : ' = 1.1.9',    },
               { 'childprocess': '>= 0.2.3'  },
               { 'ffi'      : '= 1.0.11'     },
               # https://github.com/cucumber/aruba/issues/113
               { 'aruba'    : [' = 0.4.11', '--ignore-dependencies']  },
               { 'puppet-module' : ' = 0.3.4'},],
    vms = [deb, fre])

builders = rvm.start()

builders.addDownloadGitDir(
    repo_url = 'git://github.com/sathlan/sathlan-buildbot.git',
    dest_dir = 'src'),

builders.addRVMCmd(
    command = ['cucumber'],
    workdir = 'src',)

builders.addBuilder(c['builders'], slavenames = ['example-slave'])
from buildbot.schedulers.trysched import Try_Userpass
c['schedulers'].append(Try_Userpass(
        name='try',
        builderNames=builders.get_builders_name_quick(),
        port=5560,
        userpass=[('sampleuser','samplepass')]))

from buildbot.changes.gitpoller import GitPoller
c['change_source'] = GitPoller(
        'git://github.com/buildbot/pyflakes.git',
        workdir='gitpoller-workdir', branch='master',
        pollinterval=300)

####### STATUS TARGETS

# 'status' is a list of Status Targets. The results of each build will be
# pushed to these targets. buildbot/status/*.py has a variety to choose from,
# including web pages, email senders, and IRC bots.

c['status'] = []

from buildbot.status import html
from buildbot.status.web import authz
authz_cfg=authz.Authz(
    # change any of these to True to enable; see the manual for more
    # options
    gracefulShutdown = True,
    forceBuild = True, # use this to test your slave once it is set up
    forceAllBuilds = True,
    pingBuilder = True,
    stopBuild = True,
    stopAllBuilds = True,
    cancelPendingBuild = True,
)
c['status'].append(html.WebStatus(http_port=8015, authz=authz_cfg))

####### PROJECT IDENTITY

# the 'title' string will appear at the top of this buildbot
# installation's html.WebStatus home page (linked to the
# 'titleURL') and is embedded in the title of the waterfall HTML page.

c['title'] = "MULTI-VM-RVM"
c['titleURL'] = "http://divmod.org/trac/wiki/DivmodPyflakes"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.WebStatus page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

c['buildbotURL'] = "http://localhost:8015/"

####### DB URL

# This specifies what database buildbot uses to store change and scheduler
# state.  You can leave this at its default for all but the largest
# installations.
c['db_url'] = "sqlite:///state.sqlite"

